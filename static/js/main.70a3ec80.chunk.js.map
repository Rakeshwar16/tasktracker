{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70a3ec80.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        \r\n            <button onClick = {onClick}\r\n            style = {{ backgroundColor: color}}\r\n            className = 'btn'>{text}</button>\r\n        \r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Header = ({onAdd, showAdd}) => {\r\n\r\n    return (\r\n        <header className = 'header'>\r\n            <h1>Task Tracker</h1>\r\n            <Button color ={showAdd ? 'red' : 'green'} text = {showAdd ? 'close' : 'Add'}  onClick = {onAdd} />\r\n        </header>    \r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className ={`task ${task.reminder ? 'reminder' : ' '} `}  onDoubleClick = {() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} {' '} <FaTimes  style = {{ color: 'red', cursor: 'pointer'}} \r\n                onClick = {() => onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n          {tasks.map((task, index) => (\r\n          <Task key={index} task={task} onDelete = {onDelete} onToggle = {onToggle}/>\r\n          ))}  \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText ('')\r\n        setText ('')\r\n        setText ('false')\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check' >\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked = {reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task'  className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport Header from './Components/Header'\nimport Tasks from './Components/Tasks';\nimport AddTask from './Components/AddTask';\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState (false)\n\n  const [tasks, setTasks] = useState( [])\n\n  useEffect (() => {\n\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  //Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  } \n\n    //Fetch Task\n\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`)\n      const data = await res.json()\n  \n      return data\n    } \n\n//Add Task\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n    'Content-type': 'application/json',\n  },\n  body: JSON.stringify(task),\n  })\n\n  const data = await res.json()\n\n  setTasks ([...tasks, data])\n  \n\n  // const id = Math.floor(Math.random() * 10000 ) + 1\n\n  // const newTask = {id, ...task}\n  // setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method : `DELETE`,\n  })\n  setTasks(tasks.filter((task) => task.id !==id))\n}\n\n//Toggle Reminder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = {...taskToToggle,\n  reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n      method:'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n  setTasks(tasks.map((task) => \n  task.id === id ? {...task, reminder:\n   data.reminder} : task))\n}\n\n  return (\n    <div className = 'container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete = {deleteTask} onToggle = {toggleReminder}/> : 'No Tasks to do'}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}